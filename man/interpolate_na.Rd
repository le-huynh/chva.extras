% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate_na.R
\name{interpolate_na}
\alias{interpolate_na}
\title{Interpolate missing values in grouped data}
\usage{
interpolate_na(data, var1, vars2, maxgap = 1, rule = 1)
}
\arguments{
\item{data}{A data frame containing the variables to be interpolated.}

\item{var1}{A variable serving as the unique row identifier (group).
Each value in \code{var1} must be unique.
If duplicate values exist, the function will return an error.}

\item{vars2}{A vector specifying the numeric columns to interpolate.}

\item{maxgap}{An integer defining the maximum number of consecutive \code{NA}
values to interpolate. Defaults to \code{1}.
If gaps exceed this limit, the values remain \code{NA}.}

\item{rule}{An integer (1 or 2) specifying the extrapolation rule.
Defaults to \code{1}, meaning no extrapolation beyond available data range.
Rule \code{2} uses the nearest observed value for out-of-range points.
A vector (e.g., \code{rule = c(2,1)}) can specify different
extrapolation rules for the left and right sides.}
}
\value{
A data frame with missing values interpolated in \code{vars2}.
}
\description{
Perform linear interpolation to fill missing (\code{NA}) values in specified
columns (\code{vars2}), with grouping based on a unique row identifier (\code{var1}).
Interpolation is performed row-wise.
See \strong{Examples} for the structure of input data.
}
\examples{
df <- data.frame(
  date = c("2022-03-01", "2022-08-13", "2023-02-09", "2024-09-22"),
  temp_1am = c(NA, 20, 5, 24),
  temp_6am = c(6, NA, 6, NA),
  temp_11am = c(13, 25, 8, NA),
  temp_4pm = c(18, 30, NA, 30)
)

interpolate_na(df,
               var1 = "date",
               vars2 = c("temp_1am", "temp_6am", "temp_11am", "temp_4pm"))

interpolate_na(df,
               var1 = "date",
               vars2 = c("temp_1am", "temp_6am", "temp_11am", "temp_4pm"),
               rule = 2)
}
