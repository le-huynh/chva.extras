[{"path":"https://le-huynh.github.io/chva.extras/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Truc-Ly Le-Huynh Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://le-huynh.github.io/chva.extras/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Truc-Ly Le-Huynh. Author, maintainer, copyright holder. Robert Davis. Author. Wendy Novicoff. Author. Pam DeGuzman. Author.","code":""},{"path":"https://le-huynh.github.io/chva.extras/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Le-Huynh T, Davis R, Novicoff W, DeGuzman P (2025). chva.extras: Supplementary Tools Climate Health Research VA. R package version 0.0.0.9000, https://github.com/le-huynh/chva.extras.","code":"@Manual{,   title = {chva.extras: Supplementary Tools for Climate and Health Research in VA},   author = {Truc-Ly Le-Huynh and Robert Davis and Wendy Novicoff and Pam DeGuzman},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/le-huynh/chva.extras}, }"},{"path":"https://le-huynh.github.io/chva.extras/index.html","id":"chvaextras-","dir":"","previous_headings":"","what":"Supplementary Tools for Climate and Health Research in VA","title":"Supplementary Tools for Climate and Health Research in VA","text":"Supplementary Tools Climate Health Research VA chva.extras collection supplementary functions templates designed support climate health research VA, including tools data manipulation, analysis, visualization, tailored handle large datasets.","code":""},{"path":"https://le-huynh.github.io/chva.extras/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Supplementary Tools for Climate and Health Research in VA","text":"get latest -development features, install development version GitHub: package also accessible download via Zenodo DOI 10.5281/zenodo.14910967.","code":"if(!requireNamespace(\"devtools\", quietly = TRUE)) {  install.packages(\"devtools\") } devtools::install_github(\"le-huynh/chva.extras\")"},{"path":"https://le-huynh.github.io/chva.extras/index.html","id":"functions","dir":"","previous_headings":"Installation","what":"Functions","title":"Supplementary Tools for Climate and Health Research in VA","text":"See Package index full list functions. Convert files Parquet format get_parquet_arrow(): Convert multiple files Parquet format. get_parquet_by_chunk(): Convert file Parquet format chunks. Support handy workflow check_overview(): Provide overview datasets. check_unique_value(): Count unique values specified column. get_dataset(): Get full working datasets named list Dataset R6 objects. recode_values(): Recode values based grouping logic. Compute indices used climate health research Humidity variables: cal_absolute_humidity(), cal_dewpoint_temperature(), cal_mixing_ratio(), cal_relative_humidity(), cal_specific_humidity(). Comfort indices: cal_apparent_temperature(), cal_humidex(), cal_temperature_humidity_index(). cal_saturation_vapor_pressure() Support visualization plot_contour_dlnm(): Generate filled contour plot DLNM output custom color levels.","code":""},{"path":"https://le-huynh.github.io/chva.extras/index.html","id":"templates","dir":"","previous_headings":"Installation","what":"Templates","title":"Supplementary Tools for Climate and Health Research in VA","text":"[updating]","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_absolute_humidity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate absolute humidity — cal_absolute_humidity","title":"Calculate absolute humidity — cal_absolute_humidity","text":"Calculate absolute humidity \\(\\rho_v\\) (kg/m³) vapor pressure \\(e\\) (Pa) temperature \\(t\\) (K).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_absolute_humidity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate absolute humidity — cal_absolute_humidity","text":"","code":"cal_absolute_humidity(e, t, t_unit)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_absolute_humidity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate absolute humidity — cal_absolute_humidity","text":"e Numeric. Vapor pressure Pascal (Pa). t Numeric. Air temperature Kelvin (K), degree Celsius (°C), degree Fahrenheit (°K). t_unit Character string. Unit temperature value. Must one \"celsius\", \"fahrenheit\", \"kelvin\".","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_absolute_humidity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate absolute humidity — cal_absolute_humidity","text":"Numeric value absolute humidity kg/m³.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_absolute_humidity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate absolute humidity — cal_absolute_humidity","text":"Absolute humidity \\(\\rho_v\\) (kg/m³), density water vapor, mass moisture per total volume air. calculated using formula: $$\\rho_v = \\frac{e}{R_v \\cdot T}$$ \\(e\\) vapor pressure (Pa), \\(T\\) air temperature (Kelvin), \\(R_v\\) specific gas constant moist air (461.5 J·kg⁻¹·K⁻¹). temperature input converted Kelvin based provided t_unit calculation.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_absolute_humidity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate absolute humidity — cal_absolute_humidity","text":"Davis, Robert E., Glenn R. McGregor, Kyle B. Enfield. “Humidity: Review Primer Atmospheric Moisture Human Health.” Environmental Research 144 (January 2016): 106–16. https://doi.org/10.1016/j.envres.2015.10.014.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_absolute_humidity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate absolute humidity — cal_absolute_humidity","text":"","code":"cal_absolute_humidity(e = 1000, t = 20, t_unit = \"celsius\") #> [1] 0.007391599 cal_absolute_humidity(e = 1000, t = 68, t_unit = \"fahrenheit\") #> [1] 0.007391599 cal_absolute_humidity(e = 1500, t = 298.15, t_unit = \"kelvin\") #> [1] 0.01090146"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_apparent_temperature.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate apparent temperature — cal_apparent_temperature","title":"Calculate apparent temperature — cal_apparent_temperature","text":"Calculate apparent temperature \\(\\) (°C) air temperature \\(T\\) (°C) dewpoint temperature \\(T_d\\) (°C).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_apparent_temperature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate apparent temperature — cal_apparent_temperature","text":"","code":"cal_apparent_temperature(t, td, t_unit)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_apparent_temperature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate apparent temperature — cal_apparent_temperature","text":"t, td Numeric. Air temperature dewpoint temperature degree Celsius (°C), degree Fahrenheit (°F), Kelvin (K). t_unit Character string. Unit temperature values. Must one \"celsius\", \"fahrenheit\", \"kelvin\".","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_apparent_temperature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate apparent temperature — cal_apparent_temperature","text":"Numeric value apparent temperature degree Celsius (°C).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_apparent_temperature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate apparent temperature — cal_apparent_temperature","text":"Apparent temperature \\(\\) (°C) index used assess human comfort warm season. calculated using formula: $$= -2.653 + 0.994 \\cdot T + 0.0153 \\cdot T_d^2$$ \\(T\\) air temperature \\(T_d\\) dewpoint temperature, degrees Celsius (°C). temperature input converted degree Celsius (°C) based provided t_unit calculation.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_apparent_temperature.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate apparent temperature — cal_apparent_temperature","text":"Davis, Robert E., Glenn R. McGregor, Kyle B. Enfield. “Humidity: Review Primer Atmospheric Moisture Human Health.” Environmental Research 144 (January 2016): 106–16. https://doi.org/10.1016/j.envres.2015.10.014. Kalkstein, Laurence S., Kathleen M. Valimont. “Evaluation Summer Discomfort United State Using Relative Climatological Index.” Bulletin American Meteorological Society 67, . 7 (July 1986): 842–48. https://doi.org/10.1175/1520-0477(1986)067<0842:AEOSDI>2.0.CO;2.","code":""},{"path":[]},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_apparent_temperature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate apparent temperature — cal_apparent_temperature","text":"","code":"cal_apparent_temperature(t = 28, td = 12, t_unit = \"celsius\") #> [1] 27.3822 cal_apparent_temperature(t = 82.4, td = 53.6, t_unit = \"fahrenheit\") #> [1] 27.3822"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_dewpoint_temperature.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate dewpoint temperature — cal_dewpoint_temperature","title":"Calculate dewpoint temperature — cal_dewpoint_temperature","text":"Calculate dewpoint temperature \\(T_d\\) (°C) air temperature \\(T\\) (°C) relative humidity \\(RH\\) (%).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_dewpoint_temperature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate dewpoint temperature — cal_dewpoint_temperature","text":"","code":"cal_dewpoint_temperature(rh, t, t_unit)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_dewpoint_temperature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate dewpoint temperature — cal_dewpoint_temperature","text":"rh Numeric. Relative humidity %, 0 100. t Numeric. Air temperature degree Celsius (°C), degree Fahrenheit (°F), Kelvin (K). t_unit Character string. Unit temperature value. Must one \"celsius\", \"fahrenheit\", \"kelvin\".","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_dewpoint_temperature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate dewpoint temperature — cal_dewpoint_temperature","text":"Numeric value dewpoint temperature degree Celsius (°C).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_dewpoint_temperature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate dewpoint temperature — cal_dewpoint_temperature","text":"dewpoint temperature \\(T_d\\) (°C) temperature air becomes saturated (relative humidity reaches 100%). function uses approximation derived Clausius–Clapeyron equation: $$e_s = 6.108 \\cdot exp(\\frac{17.27 \\cdot T}{T + 237.3})$$ $$T_d = \\frac{237.3 \\cdot \\ln\\left(\\frac{e_s \\cdot RH}{611}\\right)}{7.5 \\cdot \\ln(10) - \\ln\\left(\\frac{e_s \\cdot RH}{611}\\right)}$$ : \\(T\\) air temperature (°C), \\(e_s\\) saturation vapor pressure hPa, \\(RH\\) relative humidity %. temperature input converted degree Celsius (°C) based provided t_unit calculation.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_dewpoint_temperature.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate dewpoint temperature — cal_dewpoint_temperature","text":"National Weather Service. Wet-bulb Temperature Dewpoint Temperature Air Temperature Relative Humidity. Retrieved https://www.weather.gov/media/epz/wxcalc/wetBulbTdFromRh.pdf","code":""},{"path":[]},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_dewpoint_temperature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate dewpoint temperature — cal_dewpoint_temperature","text":"","code":"cal_dewpoint_temperature(rh = 39.7, t = 28, t_unit = 'celsius') #> [1] 13.02466 cal_dewpoint_temperature(rh = 42.8, t = 20, t_unit = 'celsius') #> [1] 6.979868"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_humidex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Humidex — cal_humidex","title":"Calculate Humidex — cal_humidex","text":"Calculate Humidex \\(H_x\\) (°C) vapor pressure \\(e\\) (hPa) air temperature \\(T\\) (°C).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_humidex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Humidex — cal_humidex","text":"","code":"cal_humidex(e, t, t_unit)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_humidex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Humidex — cal_humidex","text":"e Numeric. Vapor pressure hectoPascal (hPa). t Numeric. Air temperature degree Celsius (°C), degree Fahrenheit (°F), Kelvin (K). t_unit Character string. Unit temperature value. Must one \"celsius\", \"fahrenheit\", \"kelvin\".","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_humidex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Humidex — cal_humidex","text":"Numeric value humidex degree Celsius (°C).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_humidex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Humidex — cal_humidex","text":"Humidex \\(H_x\\) (°C) calculated using formula: $$H_x = T + 0.555 \\cdot (e - 10)$$ \\(e\\) vapor pressure (hPa), \\(T\\) air temperature (°C). temperature input converted degree Celsius (°C) based provided t_unit calculation.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_humidex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Humidex — cal_humidex","text":"Davis, Robert E., Glenn R. McGregor, Kyle B. Enfield. “Humidity: Review Primer Atmospheric Moisture Human Health.” Environmental Research 144 (January 2016): 106–16. https://doi.org/10.1016/j.envres.2015.10.014. Masterton, J.M., Richardson, F.. “HUMIDEX: Method Quantifying Human Discomfort Due Excessive Heat Humidity.” CLI 1-79 (1979). Environment Canada, Atmospheric Environment Service Downsview, Ontario.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_humidex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Humidex — cal_humidex","text":"","code":"cal_humidex(e = 15, t = 28, t_unit = \"celsius\") #> [1] 30.775 cal_humidex(e = 10, t = 20, t_unit = \"celsius\") #> [1] 20"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_mixing_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mixing ratio — cal_mixing_ratio","title":"Calculate mixing ratio — cal_mixing_ratio","text":"Calculate mixing ratio \\(w\\) (g/kg) vapor pressure \\(e\\) (hPa) air pressure \\(p\\) (hPa).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_mixing_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mixing ratio — cal_mixing_ratio","text":"","code":"cal_mixing_ratio(e, p)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_mixing_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mixing ratio — cal_mixing_ratio","text":"e Numeric. Vapor pressure hectoPascal (hPa). p Numeric. Air pressure hectoPascal (hPa).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_mixing_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mixing ratio — cal_mixing_ratio","text":"Numeric value mixing ratio g/kg.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_mixing_ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate mixing ratio — cal_mixing_ratio","text":"Mixing ratio \\(w\\) (g/kg) defined mass moisture per mass dry air: $$q = \\frac{0.622 \\cdot e \\cdot 1000}{p - e}$$ \\(e\\) vapor pressure (hPa), \\(p\\) air pressure (hPa).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_mixing_ratio.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate mixing ratio — cal_mixing_ratio","text":"Davis, Robert E., Glenn R. McGregor, Kyle B. Enfield. “Humidity: Review Primer Atmospheric Moisture Human Health.” Environmental Research 144 (January 2016): 106–16. https://doi.org/10.1016/j.envres.2015.10.014.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_mixing_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate mixing ratio — cal_mixing_ratio","text":"","code":"cal_mixing_ratio(e = 12, p = 1013.25) #> [1] 7.454682"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_relative_humidity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate relative humidity — cal_relative_humidity","title":"Calculate relative humidity — cal_relative_humidity","text":"Calculate relative humidity \\(RH\\) (%) actual saturation values vapor pressure, mixing ratio, specific humidity, absolute humidity.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_relative_humidity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate relative humidity — cal_relative_humidity","text":"","code":"cal_relative_humidity(e, es)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_relative_humidity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate relative humidity — cal_relative_humidity","text":"e Numeric. Actual humidity value. Can vapor pressure, mixing ratio, specific humidity, absolute humidity. es Numeric. Saturation value corresponding e, using unit type.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_relative_humidity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate relative humidity — cal_relative_humidity","text":"Numeric value relative humidity (%).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_relative_humidity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate relative humidity — cal_relative_humidity","text":"Relative humidity \\(RH\\) (%) quantifies air’s proximity saturation. calculated using formula: $$RH = \\frac{e}{e_s} \\cdot 100 \\approx \\frac{w}{w_s} \\cdot 100 \\approx \\frac{q}{q_s} \\cdot 100 \\approx \\frac{\\rho_v}{\\rho_{vs}} \\cdot 100$$ \\(e, w, q, \\rho_v\\) actual value \\(e_s, w_s, q_s, \\rho_{vs}\\) corresponding saturation value vapor pressure, mixing ratio, specific humidity, absolute humidity.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_relative_humidity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate relative humidity — cal_relative_humidity","text":"Davis, Robert E., Glenn R. McGregor, Kyle B. Enfield. “Humidity: Review Primer Atmospheric Moisture Human Health.” Environmental Research 144 (January 2016): 106–16. https://doi.org/10.1016/j.envres.2015.10.014.","code":""},{"path":[]},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_relative_humidity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate relative humidity — cal_relative_humidity","text":"","code":"# Using vapor pressure (in hPa) cal_relative_humidity(e = 10, es = 23.4) #> [1] 42.73504  # Using specific humidity (in g/kg) cal_relative_humidity(e = 7, es = 14) #> [1] 50"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_saturation_vapor_pressure.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate saturation vapor pressure — cal_saturation_vapor_pressure","title":"Calculate saturation vapor pressure — cal_saturation_vapor_pressure","text":"Calculate saturation vapor pressure \\(e_s\\) (hPa) air temperature \\(T\\) (°C).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_saturation_vapor_pressure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate saturation vapor pressure — cal_saturation_vapor_pressure","text":"","code":"cal_saturation_vapor_pressure(t, t_unit)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_saturation_vapor_pressure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate saturation vapor pressure — cal_saturation_vapor_pressure","text":"t Numeric. Air temperature degree Celsius (°C), degree Fahrenheit (°F), Kelvin (K). t_unit Character string. Unit temperature value. Must one \"celsius\", \"fahrenheit\", \"kelvin\".","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_saturation_vapor_pressure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate saturation vapor pressure — cal_saturation_vapor_pressure","text":"Numeric value saturation vapor pressure hPa.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_saturation_vapor_pressure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate saturation vapor pressure — cal_saturation_vapor_pressure","text":"Saturation vapor pressure \\(e_s\\) (hPa) vapor pressure saturated air. calculated using formula: $$e_s = 6.108 \\cdot exp(\\frac{17.27 \\cdot T}{T + 237.3})$$ \\(T\\) air temperature (°C). temperature input converted degree Celsius (°C) based provided t_unit calculation.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_saturation_vapor_pressure.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate saturation vapor pressure — cal_saturation_vapor_pressure","text":"Davis, Robert E., Glenn R. McGregor, Kyle B. Enfield. “Humidity: Review Primer Atmospheric Moisture Human Health.” Environmental Research 144 (January 2016): 106–16. https://doi.org/10.1016/j.envres.2015.10.014.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_saturation_vapor_pressure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate saturation vapor pressure — cal_saturation_vapor_pressure","text":"","code":"cal_saturation_vapor_pressure(t = 20, t_unit = 'celsius') #> [1] 23.38281 cal_saturation_vapor_pressure(t = 68, t_unit = 'fahrenheit') #> [1] 23.38281"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_specific_humidity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate specific humidity — cal_specific_humidity","title":"Calculate specific humidity — cal_specific_humidity","text":"Calculate specific humidity \\(q\\) (g/kg) vapor pressure \\(e\\) (hPa) air pressure \\(p\\) (hPa).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_specific_humidity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate specific humidity — cal_specific_humidity","text":"","code":"cal_specific_humidity(e, p)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_specific_humidity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate specific humidity — cal_specific_humidity","text":"e Numeric. Vapor pressure hectoPascal (hPa). p Numeric. Air pressure hectoPascal (hPa).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_specific_humidity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate specific humidity — cal_specific_humidity","text":"Numeric value specific humidity g/kg.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_specific_humidity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate specific humidity — cal_specific_humidity","text":"Specific humidity \\(q\\) (g/kg) defined mass moisture per mass air: $$q = \\frac{0.622 \\cdot e \\cdot 1000}{p - 0.378 \\cdot e}$$ \\(e\\) vapor pressure (hPa), \\(p\\) air pressure (hPa).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_specific_humidity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate specific humidity — cal_specific_humidity","text":"Davis, Robert E., Glenn R. McGregor, Kyle B. Enfield. “Humidity: Review Primer Atmospheric Moisture Human Health.” Environmental Research 144 (January 2016): 106–16. https://doi.org/10.1016/j.envres.2015.10.014.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_specific_humidity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate specific humidity — cal_specific_humidity","text":"","code":"cal_specific_humidity(e = 12, p = 1013.25) #> [1] 7.399521"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_temperature_humidity_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate temperature-humidity index — cal_temperature_humidity_index","title":"Calculate temperature-humidity index — cal_temperature_humidity_index","text":"Calculate temperature-humidity index \\(THI\\) (°F) air temperature \\(T\\) (°F) wet-bulb temperature \\(T_w\\) (°F).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_temperature_humidity_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate temperature-humidity index — cal_temperature_humidity_index","text":"","code":"cal_temperature_humidity_index(t, tw, t_unit)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_temperature_humidity_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate temperature-humidity index — cal_temperature_humidity_index","text":"t, tw Numeric. Air temperature wet-bulb temperature degree Celsius (°C), degree Fahrenheit (°F), Kelvin (K). t_unit Character string. Unit temperature values. Must one \"celsius\", \"fahrenheit\", \"kelvin\".","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_temperature_humidity_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate temperature-humidity index — cal_temperature_humidity_index","text":"Numeric value temperature-humidity index degree Fahrenheit (°F).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_temperature_humidity_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate temperature-humidity index — cal_temperature_humidity_index","text":"Temperature-humidity index \\(THI\\) (°F), “discomfort index”, index used assess human comfort. calculated using formula: $$THI = 0.4 \\cdot (T + T_w) + 15$$ \\(T\\) air temperature \\(T_w\\) wet-bulb temperature, degrees Fahrenheit (°F). temperature input converted degree Fahrenheit (°F) based provided t_unit calculation.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_temperature_humidity_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate temperature-humidity index — cal_temperature_humidity_index","text":"Davis, Robert E., Glenn R. McGregor, Kyle B. Enfield. “Humidity: Review Primer Atmospheric Moisture Human Health.” Environmental Research 144 (January 2016): 106–16. https://doi.org/10.1016/j.envres.2015.10.014. Thom, E. C. “Discomfort Index.” Weatherwise 12, . 2 (April 1959): 57–61. https://doi.org/10.1080/00431672.1959.9926960.","code":""},{"path":[]},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_temperature_humidity_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate temperature-humidity index — cal_temperature_humidity_index","text":"","code":"cal_temperature_humidity_index(t = 68, tw = 52.34, t_unit = 'fahrenheit') #> [1] 63.136 cal_temperature_humidity_index(t = 20, tw = 11.3, t_unit = 'celsius') #> [1] 63.136"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_wet_bulb_temperature.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate wet-bulb temperature — cal_wet_bulb_temperature","title":"Calculate wet-bulb temperature — cal_wet_bulb_temperature","text":"Calculate wet-bulb temperature \\(T_w\\) (°C) air temperature \\(T\\) (°C) dewpoint temperature \\(T_d\\) (°C).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_wet_bulb_temperature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate wet-bulb temperature — cal_wet_bulb_temperature","text":"","code":"cal_wet_bulb_temperature(t, td, t_unit)"},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_wet_bulb_temperature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate wet-bulb temperature — cal_wet_bulb_temperature","text":"t, td Numeric. Air temperature dewpoint temperature degree Celsius (°C), degree Fahrenheit (°F), Kelvin (K). t_unit Character string. Unit temperature values. Must one \"celsius\", \"fahrenheit\", \"kelvin\".","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_wet_bulb_temperature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate wet-bulb temperature — cal_wet_bulb_temperature","text":"Numeric value wet-bulb temperature degree Celsius (°C).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_wet_bulb_temperature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate wet-bulb temperature — cal_wet_bulb_temperature","text":"Wet-bulb temperature \\(T_w\\) (°C) temperature air becomes saturated evaporation constant pressure. calculated using formula: $$T_w = T_d + 1/3 * (T - T_d)$$ \\(T\\) air temperature \\(T_d\\) dewpoint temperature, degrees Celsius (°C). temperature input converted degree Celsius (°C) based provided t_unit calculation.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_wet_bulb_temperature.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate wet-bulb temperature — cal_wet_bulb_temperature","text":"Davis, Robert E., Glenn R. McGregor, Kyle B. Enfield. “Humidity: Review Primer Atmospheric Moisture Human Health.” Environmental Research 144 (January 2016): 106–16. https://doi.org/10.1016/j.envres.2015.10.014. Normand, Charles. “Energy Atmosphere.” Quarterly Journal Royal Meteorological Society 72, . 312–313 (April 1946): 145–67. https://doi.org/10.1002/qj.49707231202.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/cal_wet_bulb_temperature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate wet-bulb temperature — cal_wet_bulb_temperature","text":"","code":"cal_wet_bulb_temperature(t = 28, td = 12, t_unit = \"celsius\") #> [1] 17.33333 cal_wet_bulb_temperature(t = 82.4, td = 53.6, t_unit = \"fahrenheit\") #> [1] 17.33333"},{"path":"https://le-huynh.github.io/chva.extras/reference/check_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Check dataset overview — check_overview","title":"Check dataset overview — check_overview","text":"Provide overview datasets within specified directory match given pattern. Return summary number rows, columns, flag indicating whether column names across datasets consistent.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/check_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check dataset overview — check_overview","text":"","code":"check_overview(folder_path, pattern)"},{"path":"https://le-huynh.github.io/chva.extras/reference/check_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check dataset overview — check_overview","text":"folder_path string path directory containing sub-directories input Parquet files. pattern string filter sub-directories input files names.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/check_overview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check dataset overview — check_overview","text":"tibble summarizing datasets, columns: name name dataset file. nrow number rows dataset. ncol number columns dataset. matched_column_names logical value indicating whether column names match.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/check_overview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check dataset overview — check_overview","text":"","code":"if (FALSE) { # \\dontrun{ overview <- check_overview(folder_path = \"path/to/data_folder\", pattern = \"Facility\") } # }"},{"path":"https://le-huynh.github.io/chva.extras/reference/check_unique_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Check unique values in a column — check_unique_value","title":"Check unique values in a column — check_unique_value","text":"check_unique_value() counts unique values specified column. check_unique_value_overview() takes list outputs check_unique_value() checks consistency unique values within specified column across multiple datasets.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/check_unique_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check unique values in a column — check_unique_value","text":"","code":"check_unique_value(data, column_to_check)  check_unique_value_overview(data, column_to_check)"},{"path":"https://le-huynh.github.io/chva.extras/reference/check_unique_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check unique values in a column — check_unique_value","text":"data check_unique_value(), data frame element list dataset (output get_dataset()). check_unique_value_overview(), list outputs check_unique_value(). column_to_check column check unique values, using column_name without quotes.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/check_unique_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check unique values in a column — check_unique_value","text":"check_unique_value(): tibble unique values specified column counts. check_unique_value_overview(): tibble summarizing number unique values element list indicating whether unique values consistent across list elements.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/check_unique_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check unique values in a column — check_unique_value","text":"","code":"list_mtcars <- list(data1 = mtcars, data2 = mtcars, data3 = mtcars)  res_list <- list_mtcars %>%         purrr::map(check_unique_value, column_to_check = cyl)  check_unique_value_overview(res_list, column_to_check = cyl) #> # A tibble: 3 × 3 #>   name  unique_val_number matched_unique_val #>   <chr>             <dbl> <lgl>              #> 1 data1                 3 TRUE               #> 2 data2                 3 TRUE               #> 3 data3                 3 TRUE"},{"path":"https://le-huynh.github.io/chva.extras/reference/delete_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete multiple CSV files — delete_csv","title":"Delete multiple CSV files — delete_csv","text":"function executed converting CSV files Parquet format using get_parquet_arrow() get_parquet_by_chunk(). deletes original CSV files sub-folders specified folder, successfully converted Parquet. function filters sub-folders provided pattern deletes corresponding CSV files.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/delete_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete multiple CSV files — delete_csv","text":"","code":"delete_csv(folder_path, pattern)"},{"path":"https://le-huynh.github.io/chva.extras/reference/delete_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete multiple CSV files — delete_csv","text":"folder_path string path directory containing sub-directories files deleted. pattern string filter sub-directories csv files names.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/delete_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete multiple CSV files — delete_csv","text":"deleted paths (invisibly).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/delete_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete multiple CSV files — delete_csv","text":"","code":"if (FALSE) { # \\dontrun{ delete_csv(folder_path = \"path/to/data_folder\", pattern = \"Facility\") } # }"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_counts_by_category.html","id":null,"dir":"Reference","previous_headings":"","what":"Get counts by category in wide format — get_counts_by_category","title":"Get counts by category in wide format — get_counts_by_category","text":"Summarize number occurrences category (count_column) within group (defined group_column). result returned wide format, unique category becomes column. Missing combinations filled 0.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_counts_by_category.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get counts by category in wide format — get_counts_by_category","text":"","code":"get_counts_by_category(data, group_column, count_column, names_prefix)"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_counts_by_category.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get counts by category in wide format — get_counts_by_category","text":"data data frame. group_column column specifying grouping variable. count_column column containing categories count within group. names_prefix character string added prefix resulting column names.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_counts_by_category.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get counts by category in wide format — get_counts_by_category","text":"tibble wide format counts category per group.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_counts_by_category.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get counts by category in wide format — get_counts_by_category","text":"","code":"df <- data.frame(   Incurred_Date = as.Date(c('2021-01-01', '2021-01-01', '2021-01-02')),   Status = c(\"Open\", \"Closed\", \"Open\") ) get_counts_by_category(df,                        group_column = Incurred_Date,                        count_column = Status,                        names_prefix = \"Status_\") #> # A tibble: 2 × 3 #>   Incurred_Date Status_Closed Status_Open #>   <date>                <dbl>       <dbl> #> 1 2021-01-01                1           1 #> 2 2021-01-02                0           1"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Get full working datasets — get_dataset","title":"Get full working datasets — get_dataset","text":"Get full working datasets named list Dataset R6 objects. dataset opened files matching given pattern, names list elements correspond file names.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get full working datasets — get_dataset","text":"","code":"get_dataset(folder_path, pattern)"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get full working datasets — get_dataset","text":"folder_path string path directory containing sub-directories input Parquet files. pattern string filter sub-directories input files names.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get full working datasets — get_dataset","text":"named list datasets.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get full working datasets — get_dataset","text":"","code":"if (FALSE) { # \\dontrun{ datasets <- get_dataset(folder_path = \"path/to/data_folder\", pattern = \"Facility\") } # }"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_grid_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract grid points within a specific county boundary — get_grid_points","title":"Extract grid points within a specific county boundary — get_grid_points","text":"Extract spatial grid points gridded SpatRaster object fall within boundary specified county. Output can limited points strictly within boundary include masked points overlapping boundary extent.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_grid_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract grid points within a specific county boundary — get_grid_points","text":"","code":"get_grid_points(   gridded_data,   sf_county,   county_name,   output = c(\"within\", \"masked\") )"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_grid_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract grid points within a specific county boundary — get_grid_points","text":"gridded_data SpatRaster object containing gridded time series data (e.g., temperature). sf_county sf object containing county boundary. Virginia, sf_va_county dataset provided package may used. county_name Character string. Name county independent city extract. Must match entry county column sf_county. output Character string indicating type output. \"within\" (default) returns grid points strictly within boundary, \"masked\" returns points masked raster (may include edge pixels).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_grid_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract grid points within a specific county boundary — get_grid_points","text":"output = \"within\": tibble grid points strictly within specified boundary. output = \"masked\": sf object points masked raster (may include edge pixels).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_grid_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract grid points within a specific county boundary — get_grid_points","text":"","code":"library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE  richmond_msa <- load_era5_temperature() va_county <- sf_va_county  masked_output <- get_grid_points(gridded_data = richmond_msa,                                  sf_county = va_county,                                  county_name = \"Amelia County\",                                  output = \"masked\") #> Warning: Expected 2 pieces. Missing pieces filled with `NA` in 45 rows [21, 45, 69, 93, #> 117, 141, 165, 189, 213, 237, 261, 285, 309, 333, 357, 381, 405, 429, 453, 477, #> ...]. #> Warning: Using one column matrices in `filter()` was deprecated in dplyr 1.1.0. #> ℹ Please use one dimensional logical vectors instead. #> ℹ The deprecated feature was likely used in the chva.extras package. #>   Please report the issue at <https://github.com/le-huynh/chva.extras/issues>.  within_output <- get_grid_points(gridded_data = richmond_msa,                                  sf_county = va_county,                                  county_name = \"Amelia County\",                                  output = \"within\") #> Warning: Expected 2 pieces. Missing pieces filled with `NA` in 45 rows [21, 45, 69, 93, #> 117, 141, 165, 189, 213, 237, 261, 285, 309, 333, 357, 381, 405, 429, 453, 477, #> ...]."},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert multiple files to Parquet format — get_parquet_arrow","title":"Convert multiple files to Parquet format — get_parquet_arrow","text":"Convert multiple files specified format (e.g., CSV) Parquet format. converted Parquet files saved original location input files, allowing efficient storage retrieval large datasets.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert multiple files to Parquet format — get_parquet_arrow","text":"","code":"get_parquet_arrow(   folder_path,   pattern,   input_format = \"csv\",   max_rows_per_file = 1e+07 )"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert multiple files to Parquet format — get_parquet_arrow","text":"folder_path string path directory containing sub-directories input files. pattern string filter sub-directories input files names. input_format string indicating format input files. Default \"csv\". supported formats listed arrow::open_dataset(). max_rows_per_file Maximum number rows per output Parquet file. Default 1e7 (10 million rows).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert multiple files to Parquet format — get_parquet_arrow","text":"Converted Parquet files, saved original location input files.","code":""},{"path":[]},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert multiple files to Parquet format — get_parquet_arrow","text":"","code":"if (FALSE) { # \\dontrun{  # Assuming 'folderX' containing 10 sub-folders # (3 folders of city A, 3 folders of city B, and 4 folders of city C) with CSV files, # convert all the data of city C to Parquet format:  get_parquet_arrow(folder_path = \"path/to/folderX\",                   pattern = \"city_C\") } # }"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_by_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert file to Parquet format by chunks — get_parquet_by_chunk","title":"Convert file to Parquet format by chunks — get_parquet_by_chunk","text":"Process large file reading chunks writing chunk separate Parquet files.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_by_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert file to Parquet format by chunks — get_parquet_by_chunk","text":"","code":"get_parquet_by_chunk(   input_path,   output_folder,   chunk_no,   nrows_to_read,   column_names,   max_rows_per_file = 1e+07 )"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_by_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert file to Parquet format by chunks — get_parquet_by_chunk","text":"input_path string path file converted. output_folder string path folder Parquet files saved. chunk_no numeric vector specifying chunks process, 0 first chunk, 1 second, . nrows_to_read numeric value indicating many rows read chunk. column_names character vector column names. max_rows_per_file Maximum number rows per output Parquet file. Default 1e7 (10 million rows).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_by_chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert file to Parquet format by chunks — get_parquet_by_chunk","text":"Converted Parquet files.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_by_chunk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert file to Parquet format by chunks — get_parquet_by_chunk","text":"chunk_no parameter specifies chunks process, 0 first chunk, 1 second, . converted Parquet files named according pattern part{chunk_number}-{}.parquet.","code":""},{"path":[]},{"path":"https://le-huynh.github.io/chva.extras/reference/get_parquet_by_chunk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert file to Parquet format by chunks — get_parquet_by_chunk","text":"","code":"if (FALSE) { # \\dontrun{  # Assuming a large CSV file located at \"path/to/input.csv\", # convert it to Parquet format by processing it in chunks. # The output will be saved in \"path/to/output_folder\".  get_parquet_by_chunk(   input_path = \"path/to/input.csv\",   output_folder = \"path/to/output_folder\",   chunk_no = 0:19,   nrows_to_read = 100000,   column_names = c(\"col1\", \"col2\", \"col3\", \"col4\"),   max_rows_per_file = 50000 ) } # }"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_weather_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get observation closest to a specific time — get_weather_obs","title":"Get observation closest to a specific time — get_weather_obs","text":"Extract maximum available weather observation closest specified target time within given time window. valid observations found, return NA.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_weather_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get observation closest to a specific time — get_weather_obs","text":"","code":"get_weather_obs(   data,   target_column,   timestamp_column,   target_hour,   target_minute,   time_window )"},{"path":"https://le-huynh.github.io/chva.extras/reference/get_weather_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get observation closest to a specific time — get_weather_obs","text":"data data frame containing weather observations. target_column meteorological variable retrieve. timestamp_column column containing timestamps observations. target_hour integer specifying target hour (0-23) retrieving observations. target_minute integer specifying target minute (0-59) retrieving observations. time_window integer specifying allowable time window (minutes) around target time.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_weather_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get observation closest to a specific time — get_weather_obs","text":"numeric value NA.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_weather_obs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get observation closest to a specific time — get_weather_obs","text":"Davis, Robert E., Owen Himmel, Parker K. Sims, Christopher M. Fuhrmann. “Mortality Diurnal Temperature Range Virginia.” International Journal Biometeorology, January 30, 2025. https://doi.org/10.1007/s00484-025-02850-6","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/get_weather_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get observation closest to a specific time — get_weather_obs","text":"","code":"df <- data.frame(   timestamp = (c(\"2024-03-01 06:50:00\",                  \"2024-03-01 06:53:00\",                  \"2024-03-01 07:10:00\",                  \"2024-03-01 07:30:00\",                  \"2024-03-01 07:55:00\")),   temperature = c(15, NA, 16, NA, 17) )  # retrieve the closest temperature observation around 07:00 within a 30-minute window get_weather_obs(df,                 target_column = temperature,                 timestamp_column = timestamp,                 target_hour = 7,                 target_minute = 0,                 time_window = 30) #> [1] 16  # Note: Use `!!rlang::sym()` if `target_column` or `timestamp_column` # is provided as a character string.  get_weather_obs(df,                 target_column = \"temperature\",                 timestamp_column = timestamp,                 target_hour = 7,                 target_minute = 0,                 time_window = 30) #> [1] NA  get_weather_obs(df,                 target_column = !!rlang::sym(\"temperature\"),                 timestamp_column = timestamp,                 target_hour = 7,                 target_minute = 0,                 time_window = 30) #> [1] 16"},{"path":"https://le-huynh.github.io/chva.extras/reference/interpolate_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate missing values in grouped data — interpolate_na","title":"Interpolate missing values in grouped data — interpolate_na","text":"Perform linear interpolation fill missing (NA) values specified columns (vars2), grouping based unique row identifier (var1). Interpolation performed row-wise. See Examples structure input data.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/interpolate_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate missing values in grouped data — interpolate_na","text":"","code":"interpolate_na(data, var1, vars2, maxgap = 1, rule = 1)"},{"path":"https://le-huynh.github.io/chva.extras/reference/interpolate_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate missing values in grouped data — interpolate_na","text":"data data frame containing variables interpolated. var1 variable serving unique row identifier (group). value var1 must unique. duplicate values exist, function return error. vars2 vector specifying numeric columns interpolate. maxgap integer defining maximum number consecutive NA values interpolate. Defaults 1. gaps exceed limit, values remain NA. rule integer (1 2) specifying extrapolation rule. Defaults 1, meaning extrapolation beyond available data range. Rule 2 uses nearest observed value --range points. vector (e.g., rule = c(2,1)) can specify different extrapolation rules left right sides.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/interpolate_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate missing values in grouped data — interpolate_na","text":"data frame missing values interpolated vars2.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/interpolate_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate missing values in grouped data — interpolate_na","text":"","code":"df <- data.frame(   date = c(\"2022-03-01\", \"2022-08-13\", \"2023-02-09\", \"2024-09-22\"),   temp_1am = c(NA, 20, 5, 24),   temp_6am = c(6, NA, 6, NA),   temp_11am = c(13, 25, 8, NA),   temp_4pm = c(18, 30, NA, 30) )  interpolate_na(df,                var1 = \"date\",                vars2 = c(\"temp_1am\", \"temp_6am\", \"temp_11am\", \"temp_4pm\")) #> # A tibble: 4 × 5 #>   date       temp_1am temp_6am temp_11am temp_4pm #>   <chr>         <dbl>    <dbl>     <dbl>    <dbl> #> 1 2022-03-01       NA      6          13       18 #> 2 2022-08-13       20     22.5        25       30 #> 3 2023-02-09        5      6           8       NA #> 4 2024-09-22       24     NA          NA       30  interpolate_na(df,                var1 = \"date\",                vars2 = c(\"temp_1am\", \"temp_6am\", \"temp_11am\", \"temp_4pm\"),                rule = 2) #> # A tibble: 4 × 5 #>   date       temp_1am temp_6am temp_11am temp_4pm #>   <chr>         <dbl>    <dbl>     <dbl>    <dbl> #> 1 2022-03-01        6      6          13       18 #> 2 2022-08-13       20     22.5        25       30 #> 3 2023-02-09        5      6           8        8 #> 4 2024-09-22       24     NA          NA       30"},{"path":"https://le-huynh.github.io/chva.extras/reference/load_era5_temperature.html","id":null,"dir":"Reference","previous_headings":"","what":"Load hourly ERA5-Land temperature data for the Richmond MSA — load_era5_temperature","title":"Load hourly ERA5-Land temperature data for the Richmond MSA — load_era5_temperature","text":"Load SpatRaster object containing hourly temperature data ERA5-Land Richmond Metropolitan Statistical Area (MSA). time dimension raster spans 2017-05-14 00:00:00 2017-05-16 23:00:00 Eastern Time.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/load_era5_temperature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load hourly ERA5-Land temperature data for the Richmond MSA — load_era5_temperature","text":"","code":"load_era5_temperature()"},{"path":"https://le-huynh.github.io/chva.extras/reference/load_era5_temperature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load hourly ERA5-Land temperature data for the Richmond MSA — load_era5_temperature","text":"SpatRaster","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/load_era5_temperature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load hourly ERA5-Land temperature data for the Richmond MSA — load_era5_temperature","text":"","code":"r <- load_era5_temperature()"},{"path":"https://le-huynh.github.io/chva.extras/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://le-huynh.github.io/chva.extras/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pipe operator — %>%","text":"","code":"c(1, 2, 3) %>% mean() #> [1] 2"},{"path":"https://le-huynh.github.io/chva.extras/reference/plot_contour_dlnm.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a filled contour plot for DLNM output with custom color levels — plot_contour_dlnm","title":"Generate a filled contour plot for DLNM output with custom color levels — plot_contour_dlnm","text":"function modified version dlnm::plot.crosspred() dlnm package. generates filled contour plot visualize estimated exposure-lag-response association distributed lag non-linear model (DLNM) object class \"crosspred\".","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/plot_contour_dlnm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a filled contour plot for DLNM output with custom color levels — plot_contour_dlnm","text":"","code":"plot_contour_dlnm(   x,   z_range = NULL,   nlevels = 20,   color1 = \"blue\",   color2 = \"red\",   color3 = \"white\",   ci_level = x$ci.level,   exp = NULL,   ... )"},{"path":"https://le-huynh.github.io/chva.extras/reference/plot_contour_dlnm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a filled contour plot for DLNM output with custom color levels — plot_contour_dlnm","text":"x object class \"crosspred\", typically generated using crosspred. z_range Optional numeric vector specifying range values contour levels. NULL, range defaults automatic setting used dlnm::plot.crosspred(). nlevels Integer. number contour levels display. Default 20. color1 Character string. Color used negative (reference) effects. Default \"blue\". color2 Character string. Color used positive (reference) effects. Default \"red\". color3 Character string. Color used reference effect level. Default \"white\". ci_level Numeric. value 0 1 specifying confidence level. Defaults ci_level stored x object. exp Logical. Indicating whether exponentiate estimates (e.g., relative risks). NULL, exponentiation automatically applied log logit link models. ... Additional graphical parameters passed graphics::filled.contour().","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/plot_contour_dlnm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a filled contour plot for DLNM output with custom color levels — plot_contour_dlnm","text":"filled contour plot.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/plot_contour_dlnm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a filled contour plot for DLNM output with custom color levels — plot_contour_dlnm","text":"function builds dlnm::plot.crosspred() dlnm package, adding ability customize z-scale color levels via z_range, nlevels, color*, set automatically original implementation. Generate contour plot predicted effects predictor-lag space. Additional graphical options like plot.title, plot.axes, key.title can provided adjust titles axis/key labels. z_range provided, function produces contour plot identical returned dlnm::plot.crosspred().","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/plot_contour_dlnm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate a filled contour plot for DLNM output with custom color levels — plot_contour_dlnm","text":"Gasparrini . “Distributed lag linear non-linear models R: package dlnm.” Journal Statistical Software. 2011; 43(8):1-20. https://doi.org/10.18637/jss.v043.i08.","code":""},{"path":[]},{"path":"https://le-huynh.github.io/chva.extras/reference/plot_contour_dlnm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a filled contour plot for DLNM output with custom color levels — plot_contour_dlnm","text":"","code":"# Fit a model and generate \"crosspred\" object library(dlnm) #> This is dlnm 2.4.10. For details: help(dlnm) and vignette('dlnmOverview'). library(splines)  cb.pm <- crossbasis(chicagoNMMAPS$pm10,                     lag = 7,                     argvar = list(fun = \"lin\"),                     arglag = list(fun = \"strata\"))  varknots <- equalknots(chicagoNMMAPS$temp, fun = \"bs\", df = 5, degree = 2) lagknots <- logknots(30, 3) cb.temp <- crossbasis(chicagoNMMAPS$temp,                       lag = 30,                       argvar = list(fun = \"bs\", knots = varknots),                       arglag = list(knots = lagknots))  model <- glm(death ~ cb.pm + cb.temp + ns(time, 7*14) + dow,              family = quasipoisson(),              data = chicagoNMMAPS)  pred.pm <- crosspred(cb.temp, model, cen = 21, by = 1)  # When `z_range` is not provided, the function produces a contour plot # identical to that returned by `dlnm::plot.crosspred()`. plot_contour_dlnm(pred.pm,                   xlab = \"Temperature\",                   key.title = title(\"RR\"),                   plot.title = title(\"Contour plot\",                                      xlab = \"Temperature\",                                      ylab = \"Lag\"))   # Change `z_range` and `nlevels` to get user-defined color levels. plot_contour_dlnm(pred.pm,                   z_range = c(0.85, 1.4),                   nlevels = 30,                   xlab = \"Temperature\",                   key.title = title(\"RR\"),                   plot.title = title(\"Contour plot\",                                      xlab = \"Temperature\",                                      ylab = \"Lag\"))   # Customize colors plot_contour_dlnm(pred.pm,                   z_range = c(0.85, 1.4),                   nlevels = 30,                   color1 = \"darkgreen\",                   xlab = \"Temperature\",                   key.title = title(\"RR\"),                   plot.title = title(\"Contour plot\",                                      xlab = \"Temperature\",                                      ylab = \"Lag\"))"},{"path":"https://le-huynh.github.io/chva.extras/reference/recode_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode values based on grouping logic — recode_values","title":"Recode values based on grouping logic — recode_values","text":"function groups data var1 recodes var2 based specific conditions. var1 one unique var2 value, original value retained. var1 two unique var2 values, known value assigned one matches unknown_category; otherwise, unknown_category assigned. var1 two unique var2 values, unknown_category assigned.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/recode_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode values based on grouping logic — recode_values","text":"","code":"recode_values(data, var1, var2, unknown_category)"},{"path":"https://le-huynh.github.io/chva.extras/reference/recode_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode values based on grouping logic — recode_values","text":"data data frame element list dataset (output get_dataset()). var1 character string specifying grouping variable. var2 character string specifying variable recoded. unknown_category character string specifying ambiguous unknown values var2.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/recode_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode values based on grouping logic — recode_values","text":"data frame var1 recoded var2.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/recode_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode values based on grouping logic — recode_values","text":"","code":"df <- data.frame(ID = c(1, 1, 2, 2, 3, 3, 3),                  Gender = c(\"Male\", \"Unknown\", \"Female\", \"Female\", \"Male\", \"Female\", \"Unknown\")) df #>   ID  Gender #> 1  1    Male #> 2  1 Unknown #> 3  2  Female #> 4  2  Female #> 5  3    Male #> 6  3  Female #> 7  3 Unknown  recode_values(df, var1 = \"ID\", var2 = \"Gender\", unknown_category = \"Unknown\") #> Joining with `by = join_by(ID, Gender)` #> Joining with `by = join_by(ID, Gender)` #> # A tibble: 3 × 2 #>      ID Gender  #>   <dbl> <chr>   #> 1     2 Female  #> 2     1 Male    #> 3     3 Unknown"},{"path":"https://le-huynh.github.io/chva.extras/reference/reshape_raster_timeseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape raster to dataframe — reshape_raster_timeseries","title":"Reshape raster to dataframe — reshape_raster_timeseries","text":"Converts SpatRaster time series tidy data frame long format, including spatial coordinates (x, y) time information UTC Eastern Time.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/reshape_raster_timeseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape raster to dataframe — reshape_raster_timeseries","text":"","code":"reshape_raster_timeseries(data)"},{"path":"https://le-huynh.github.io/chva.extras/reference/reshape_raster_timeseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape raster to dataframe — reshape_raster_timeseries","text":"data SpatRaster","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/reshape_raster_timeseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape raster to dataframe — reshape_raster_timeseries","text":"tibble columns: x, y: Spatial coordinates timeUTC: Original timestamp (UTC) extracted layer names timeET: Converted timestamp US/Eastern time zone value: Raster cell value given time location","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/reshape_raster_timeseries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape raster to dataframe — reshape_raster_timeseries","text":"","code":"r <- load_era5_temperature() reshape_raster_timeseries(r) #> Warning: Expected 2 pieces. Missing pieces filled with `NA` in 450 rows [21, 45, 69, 93, #> 117, 141, 165, 189, 213, 237, 261, 285, 309, 333, 357, 381, 405, 429, 453, 477, #> ...]. #> # A tibble: 10,800 × 5 #>        x     y timeUTC             timeET              value #>    <dbl> <dbl> <chr>               <dttm>              <dbl> #>  1 -78.1  37.9 2017-05-14 04:00:00 2017-05-14 00:00:00  284. #>  2 -78.1  37.9 2017-05-14 05:00:00 2017-05-14 01:00:00  283. #>  3 -78.1  37.9 2017-05-14 06:00:00 2017-05-14 02:00:00  282. #>  4 -78.1  37.9 2017-05-14 07:00:00 2017-05-14 03:00:00  282. #>  5 -78.1  37.9 2017-05-14 08:00:00 2017-05-14 04:00:00  282. #>  6 -78.1  37.9 2017-05-14 09:00:00 2017-05-14 05:00:00  282. #>  7 -78.1  37.9 2017-05-14 10:00:00 2017-05-14 06:00:00  282. #>  8 -78.1  37.9 2017-05-14 11:00:00 2017-05-14 07:00:00  283. #>  9 -78.1  37.9 2017-05-14 12:00:00 2017-05-14 08:00:00  286. #> 10 -78.1  37.9 2017-05-14 13:00:00 2017-05-14 09:00:00  290. #> # ℹ 10,790 more rows"},{"path":"https://le-huynh.github.io/chva.extras/reference/sf_va_county.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic boundaries of counties and independent cities in Virginia — sf_va_county","title":"Geographic boundaries of counties and independent cities in Virginia — sf_va_county","text":"simple feature collection 133 counties independent cities Virginia.","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/sf_va_county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic boundaries of counties and independent cities in Virginia — sf_va_county","text":"","code":"sf_va_county"},{"path":[]},{"path":"https://le-huynh.github.io/chva.extras/reference/sf_va_county.html","id":"sf-va-county","dir":"Reference","previous_headings":"","what":"sf_va_county","title":"Geographic boundaries of counties and independent cities in Virginia — sf_va_county","text":"simple feature collection 133 features 6 fields: shapeGroup Character. Administrative level grouping, .e., \"USA\". shapeType Character. Type administrative boundary, .e., \"ADM2\". county Character. Name county independent city. shapeISO Character. ISO code available. shapeID Character. Unique shape identifier. shapeCanonical Character. Canonical name unit. geometry MULTIPOLYGON. spatial boundary EPSG:4326 (WGS 84).","code":""},{"path":"https://le-huynh.github.io/chva.extras/reference/sf_va_county.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Geographic boundaries of counties and independent cities in Virginia — sf_va_county","text":"Data originally obtained geoBoundaries, post-processed get current administrative boundaries counties independent cities Virginia.","code":""}]
